#!/bin/bash -xv

# this script provides unique name for a build in the form of PROJ_NAME-TIMESTAMP.apk
# 1. runs gradle to build the apk
# 2. generate QR image 
# 3. upload the apk to a webserver with the QR
# 4. android mobile can download by scanning the QR 
# 
# NOTES:
# QR generated by external jar file that should be in the project folder
# the QR image can be open locally by xdg-open xxx.png

clear
PROJ_NAME=`echo ${PWD##*/}`
TIME_STAMP=`date +%s`
APK_NEW_NAME=${PROJ_NAME}-${TIME_STAMP}.apk
QR_IMAGE_PNG=${PROJ_NAME}-${TIME_STAMP}.png

APK_BASE_NAME="app-debug.apk"
URL_FOLDER="http://www.devopskb.net:81/apk/"

echo "cleaning and create the apk ..."
./gradlew clean assembleDebug
if [ $? != 0 ]; then
	echo "ERROR during gradle task. exiting..."
	exit 1
fi

echo "checking output apk location and creation date..."
ls -lstr app/build/outputs/apk/

echo "adding timstamped to artifact..."
cp app/build/outputs/apk/${APK_BASE_NAME} app/build/outputs/apk/${APK_NEW_NAME}

echo "generating QR image"
java -Durl=${URL_FOLDER}${APK_NEW_NAME} \
     -Dfilename=${PWD}/app/build/outputs/apk/${QR_IMAGE_PNG} \
     -cp qrgen-1.0-SNAPSHOT-jar-with-dependencies.jar net.kukinet.qr.QRGen

echo "uploading artifact to ${URL_FOLDER}"
scp app/build/outputs/apk/${APK_NEW_NAME} \
    app/build/outputs/apk/${QR_IMAGE_PNG} \
    root@www.devopskb.net:/var/www/html/apk

#xdg-open ${PWD}/app/build/outputs/apk/${QR_IMAGE_PNG}
tree app/build/outputs/apk
echo "done."
